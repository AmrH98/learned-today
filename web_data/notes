Python to access Web Data

Week 1:

Regular Expressions
  https://www.debuggex.com/cheatsheet/regex/python
  https://docs.python.org/3/howto/regex.html
  
  Python Regular Expression Quick Guide
    ^ Matches the beginning of a line $ Matches the end of the line
    . Matches any character
    \s Matches whitespace
    \S Matches any non-whitespace character
    * Repeats a character zero or more times *? Repeats a character zero or more times
    (non-greedy)
    + Repeats a character one or more times +? Repeats a character one or more times
    (non-greedy)
    [aeiou] Matches a single character in the listed set [^XYZ] Matches a single character not in the listed set [a-z0-9] The set of characters can include a range
    ( Indicates where string extraction is to start
    ) Indicates where string extraction is to end
    
  Extracting Data
    Greedy Matching/Non greedy
    Fine-tuning
    Double split pattern 
    Regex version of double splitting 
    Escape
    
-Week 2:
	Transport control protocol TCP
		Built on top of IP
		IP might lose data
		Handles ‘flow control’ using a transmit window
		Provides a nice reliable pipe
		
	TCP connections Socket
	TCP port numbers
	
	Socket in Python
		Stream : series of flowing char
		
	Hypertest transfer protocol HTTP
	
	Getting data from server
		Get, href, response,…
		
	Internet Standards
		Internet Engineering Task Force IETF
		
	Telnet
	Socket, Headers, Body
	HTTP request in python
	http://www.net-intro.com
	Developer Console 
#Check Web app

Week 3:
	Using urllib in python
		Like a file
		Following links 
		Reading web data


	Parsing web pages
		Web scraping. Spidering/crawling web
		Using beautifulsoup lib - https://www.crummy.com/software/BeautifulSoup/bs4/doc/


	
	
